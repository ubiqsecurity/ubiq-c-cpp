workflow:
    rules:
        - if: $CI_COMMIT_TAG
        - if: $CI_COMMIT_BRANCH
        - if: $CI_MERGE_REQUEST_IID

#image:
#    name: debian:stable

services:
    - docker:18-dind

variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""

cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
        - build

stages:
    - build
    - test
    - deploy

build-debian-11:
    image: debian:bullseye
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    stage: build
    before_script:
        - apt -y update
        - apt -y install cmake gcc g++
        - apt -y install libcurl4-openssl-dev libssl-dev
        - apt -y install dpkg-dev file libgmp-dev
        - apt -y install libunistring-dev
    script:
        - cmake -S. -Bbuild
        - cmake --build build -- -j$(nproc)
        - cmake --build build --target package -- -j$(nproc)
    cache:
       key: "debian-11-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

build-debian-12:
    image: debian:bookworm
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    stage: build
    before_script:
        - apt -y update
        - apt -y install cmake gcc g++
        - apt -y install libcurl4-openssl-dev libssl-dev
        - apt -y install dpkg-dev file libgmp-dev
        - apt -y install libunistring-dev
    script:
        - cmake -S. -Bbuild
        - cmake --build build -- -j$(nproc)
        - cmake --build build --target package -- -j$(nproc)
    cache:
       key: "debian-12-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

build-centos-9-stream:
    image: quay.io/centos/centos:stream9
    variables:
        GIT_SUBMODULE_STRATEGY: recursive
    stage: build
    before_script:
        - yum -y update
        - yum install -y gcc gcc-c++ make gmp-c++ gmp-devel 
        - yum install -y openssl-devel libcurl-devel file rpm-build cmake
        - cd /tmp
        - curl -LOJ https://mirror.stream.centos.org/9-stream/CRB/x86_64/os/Packages/libunistring-devel-0.9.10-15.el9.x86_64.rpm
        - yum install -y ./libunistring*.rpm
        - rm -f ./lib*.rpm
        - cd -
    script:
        - cmake -S. -Bbuild
        - cmake --build build -- -j$(nproc)
        - cmake --build build --target package -- -j$(nproc)
    cache:
       key: "centos-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

test-debian-11:
    image: debian:bullseye
    stage: test
    before_script:
        - apt -y update
        - apt -y install libcurl4 libssl1.1
    script:
        - ldd build/src/test/unittests
        - build/src/test/unittests
        - ldd build/src/test/test_performance
        - ls -l build/src/test src/test/DATA
        - build/src/test/test_performance_c
        - build/src/test/test_performance
    cache:
       key: "debian-11-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

test-debian-12:
    image: debian:bookworm
    stage: test
    before_script:
        - apt -y update
        - apt -y install libcurl4 libssl3
    script:
        - ldd build/src/test/unittests
        - build/src/test/unittests
        - ldd build/src/test/test_performance
        - ls -l build/src/test src/test/DATA
        - build/src/test/test_performance_c
        - build/src/test/test_performance
    cache:
       key: "debian-12-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

test-centos-9-stream:
    image: quay.io/centos/centos:stream9
    stage: test
    script:
        - ldd build/src/test/unittests
        - build/src/test/unittests
        - ldd build/src/test/test_performance
        - ls -l build/src/test src/test/DATA
        - build/src/test/test_performance_c
        - build/src/test/test_performance
    cache:
       key: "centos-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

sast:
    variables:
        SAST_EXCLUDED_PATHS: src/test, build
    stage: test
include:
    - template: Security/SAST.gitlab-ci.yml

# package-centos:
#    stage: deploy
#    cache:
#       key: "centos-${CI_COMMIT_REF_SLUG}"
#       paths:
#        - build
#    script:
#        - ls build/*.rpm
#    artifacts:
#        paths:
#            - build/*.rpm
#    only:
#        - master
#        - tags
#    except:
#        - schedules

package-debian-11:
    image: debian:bullseye
    stage: deploy
    artifacts:
        paths:
            - build/*.deb
    script:
        - ls build/*.deb
    only:
        - UB1-980_Debian_bookworm_port
        - master
        - tags
    except:
        - schedules
    cache:
       key: "debian-11-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

package-debian-12:
    image: debian:bookworm
    stage: deploy
    artifacts:
        paths:
            - build/*.deb
    script:
        - ls build/*.deb
    only:
        - UB1-980_Debian_bookworm_port
        - master
        - tags
    except:
        - schedules
    cache:
       key: "debian-12-${CI_COMMIT_REF_SLUG}"
       paths:
        - build

deploy:
    image: debian:bullseye
    stage: deploy
    before_script:
        - apt -y update
        - apt -y install docker.io
        - docker login --username ${DOCKERHUB_USER} --password-stdin < ${DOCKERHUB_TOKEN}
    script:
        - docker build -t ubiqsecurity/ubiq-c-cpp-sample -f src/examples/Dockerfile .
        - docker tag ubiqsecurity/ubiq-c-cpp-sample ubiqsecurity/ubiq-c-cpp-sample:${CI_COMMIT_TAG:-latest}
        - docker push ubiqsecurity/ubiq-c-cpp-sample
    after_script:
        - docker logout
    artifacts:
        # gitlab will keep the most recent artifacts
        # regardless of the expiration time
        expire_in: 1 hour
        paths:
            - build/*.deb
    only:
        - master
        - tags
    except:
        - schedules
    cache:
       key: "debian-11-${CI_COMMIT_REF_SLUG}"
       paths:
        - build
        
